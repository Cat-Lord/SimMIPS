Todo:
    - calculation of offset (beq/bne) ?

    - QUESTION: 
        - how to represent arguments of lw/sw ?     Possible answer: argument of type "DATA" can be made of "base(reg)" arguments and parsing will be done this way. Possible.
        - similarly beq labels ?                    Possible answer: define type "LABEL". Don't allow other types of 'addressing'
        - how to (if even) represent NOP ?          For now no. I just put here sample representation of nop from instruction set.
                                                    "nop":  {"type": "R", "fields": {"op": 0,  "rs":  "0", "rt":  "0", "rd":  "0", "shamt": 0, "func": 0 }, "desc": "Empty operation"}

Done:
    - calculation of offset (beq/bne): 
        current PC address (address of beq/bne)
        +   4
        +   sign_extended offset << 2

        (offset is the address of target instruction)


-------------
Todo: 
    - check if parsing different types of argument works. Possible to write junit tests for this part.
    - rework MAIN, because argument types loading has changed.

Done:
    - main is now correctly displaying arg types


Notes:
    - there is a question: how to represent constant values in fields ? Answer: Just represent constant values as strings and everything that isn't a constant begins with "#"