{
    "?": [
      {"label": "BRANCH_MUX" , "type": "MUX", "desc": "Chooses from next address or calculated address in case of branching." },
      {"label": "PC"         , "type": "PC", "desc": "Adds 4 to the value of input A." },
      {"label": "CONST_ADDER", "type": "ConstAdder", "desc": "Adds 4 to the value of input A." },
      {"label": "I_MEM"       , "type": "InstructionMemory" },
      {"label": "IF_ID"       , "type": "LatchRegister", "desc": "Latch register between Fetch and Decode phase" },

      {"label": "CU"          , "type": "ControlUnit" },
      {"label": "CU_MUX"      , "type": "ConstMUX", "desc": "Activating this MUX results in value of constant output value." }, 
      {"label": "REG_BANK"    , "type": "RegBank" },
      {"label": "SIGN_EXT"    , "type": "SignExt" },
      {"label": "ID_EX"       , "type": "LatchRegister", "desc": "Latch register between Decode and Execute phase" },

      {"label": "EX_CU_MUX"   , "type": "ConstMUX", "desc": "MUX that can zero out signals from control unit in EX phase." },
      {"label": "DEST_REG_MUX", "type": "MUX", "desc": "Chooses destination register (either rd or rt value from instruction)." },
      {"label": "ADDER"       , "type": "Adder" },
      {"label": "ALU"         , "type": "ALU" },
      {"label": "ALUSrc"      , "type": "MUX", "desc": "Determins the second input into ALU. It could be either output from registers or immediate value." },
      {"label": "EX_MEM"      , "type": "LatchRegister", "desc": "Latch register between Execute and Memory phase" },
 
      {"label": "BRANCH_AND"  , "type": "AND" },
      {"label": "DATA_MEM"    , "type": "DataMemory"},

      {"label": "MEM_WB"      , "type": "LatchRegister" , "desc": "Latch register between Memory and WriteBack phase"},
      {"label": "WB_MUX"      , "type": "MUX", "desc" : "Chooses from memory output or immediate value. Chosen value may be written into a register in next cycle." }
    ]
}
