{
  "CPU": {
    "BIT_SIZE": 32,
    "components": [
      {
        "PC": {
          "label": "PC",
          "style": {
            "x": 95,
            "y": 555,
            "width": 35,
            "height": 70,
            "colour": "#ccd360"
          },
          "inputs": {
            "input": {}
          },
          "outputs": {
            "address": {}
          },
          "description": "Adds 4 to the value of input A."
        }
      },
      {
        "Fork": {
          "label": "AF",
          "style": {
            "x": 160,
            "y": 590,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {}
          },
          "outputs": {
            "address": {}
          },
          "description": "Forks address from PC."
        }
      },
      {
        "ConstAdder": {
          "label": "+4",
          "style": {
            "x": 245,
            "y": 360,
            "width": 50,
            "height": 100,
            "colour": "#2c72f4"
          },
          "inputs": {
            "address": {}
          },
          "outputs": {
            "newAddress": {}
          },
          "constant": {
            "data": 4
          },
          "description": "Adds 4 to the value of input A."
        }
      },
      {
        "Fork": {
          "label": "NAF",
          "style": {
            "x": 327,
            "y": 413,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {}
          },
          "outputs": {
            "newAddress": {}
          },
          "description": "Forks new address from constAdder to branch and latch register."
        }
      },
      {
        "MUX": {
          "label": "BRANCH_MUX",
          "style": {
            "x": 1375,
            "y": 85,
            "width": 35,
            "height": 70,
            "colour": "#c51df8"
          },
          "inputs": {
            "newAddress": {},
            "branchAddress": {}
          },
          "outputs": {
            "newAddress": {}
          },
          "selectors": {
            "branchSignal": {
              "bitSize": 1
            }
          },
          "description": "Chooses from next address or calculated address in case of branching."
        }
      },
      {
        "InstructionMemory": {
          "label": "Instruction Memory",
          "style": {
            "x": 200,
            "y": 528,
            "width": 125,
            "height": 125,
            "colour": "#ccd360"
          },
          "inputs": {
            "input": {}
          },
          "outputs": {
            "iCode": {}
          },
          "description": "Stores compiled code instructions."
        }
      },
      {
        "LatchRegister": {
          "label": "IF_ID",
          "style": {
            "x": 385,
            "y": 185,
            "width": 40,
            "height": 720,
            "colour": "#589074"
          },
          "inputs": {
            "newAddress": {},
            "iCode": {}
          },
          "outputs": {
            "newAddress": {},
            "iCode": {},
            "rs": {
              "range": { "6": "27" }
            },
            "rt": {
              "range": { "11": "27" }
            },
            "rd": {
              "range": { "16": "27" }
            },
            "immediateValue": {
              "range": { "16": "16" }
            }
          },
          "inputsToOutputs": {
            "newAddress": [
              "newAddress"
            ],
            "iCode": [
              "iCode",
              "rs",
              "rt",
              "rd",
              "immediateValue"
            ]
          },
          "bubble": { "bitSize": 1 },
          "description": "Latch register between Fetch and Decode phase"
        }
      },
      {
        "ControlUnit": {
          "label": "CU",
          "style": {
            "x": 560,
            "y": 260,
            "width": 35,
            "height": 70,
            "colour": "#d1eaff"
          },
          "inputs": {
            "input": {}
          },
          "outputs": {
            "controlSignals": {
              "bitSize": "11"
            }
          },
          "opCode": { "range": { "0": "26" } },
          "func":   { "range": { "27": "27" } },
          "funcDependant": "AluOp",
          "controlSignal": {
            "RegDest":  { "bitSize": "1" },
            "AluSrc":   { "bitSize": "1" },
            "AluOp":    { "bitSize": "4" },
            "Branch":   { "bitSize": "1" },
            "MemRead":  { "bitSize": "1" },
            "MemWrite": { "bitSize": "1" },
            "RegWrite": { "bitSize": "1" },
            "MemToReg": { "bitSize": "1" }
          },
          "opcodeToControlSignals": {
            "0": [
              1,
              0,
              0,
              0,
              0,
              0,
              1,
              1
            ],
            "4": [
              0,
              0,
              2,
              1,
              0,
              0,
              0,
              0
            ],
            "5": [
              0,
              0,
              11,
              1,
              0,
              0,
              0,
              0
            ],
            "8": [
              0,
              1,
              1,
              0,
              0,
              0,
              1,
              1
            ],
            "9": [
              0,
              1,
              2,
              0,
              0,
              0,
              1,
              1
            ],
            "12": [
              0,
              1,
              3,
              0,
              0,
              0,
              1,
              1
            ],
            "13": [
              0,
              1,
              4,
              0,
              0,
              0,
              1,
              1
            ],
            "14": [
              0,
              1,
              6,
              0,
              0,
              0,
              1,
              1
            ],
            "18": [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            "35": [
              0,
              1,
              1,
              0,
              0,
              0,
              1,
              1
            ],
            "36": [
              0,
              1,
              1,
              0,
              0,
              0,
              1,
              1
            ],
            "37": [
              0,
              1,
              15,
              0,
              0,
              0,
              1,
              1
            ],
            "43": [
              0,
              1,
              1,
              0,
              0,
              1,
              0,
              1
            ]
          },
          "funcToALUOpCode": {
            "32": "1",
            "36": "3",
            "26": "9",
            "27": "10",
            "24": "7",
            "25": "8",
            "0": "0",
            "39": "5",
            "37": "4",
            "1": "13",
            "2": "14",
            "34": "2",
            "38": "6"
          },
          "description": "Control Unit generates control signals to dictate which components can be active."
        }
      },
      {
        "ConstMUX": {
          "label": "CU_MUX",
          "style": {
            "x": 680,
            "y": 240,
            "width": 35,
            "height": 70,
            "colour": "#c51df8"
          },
          "inputs": {
            "input": {
              "bitSize": 11
            }
          },
          "outputs": {
            "controlSignals": {
              "bitSize": 11
            }
          },
          "constant": {
            "data": 0
          },
          "selectors": {
            "bubble": {
              "bitSize": 1
            }
          },
          "description": "Activating this MUX results in value of constant output value."
        }
      },
      {
        "Fork": {
          "label": "RTF",
          "style": {
            "x": 475,
            "y": 515,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {
              "bitSize": 5
            }
          },
          "outputs": {
            "rt": {
              "bitSize": 5
            }
          },
          "description": "Forks 'rt' part of instruction code."
        }
      },
      {
        "RegBank": {
          "label": "Registers",
          "style": {
            "x": 565,
            "y": 445,
            "width": 170,
            "height": 200,
            "colour": "#ccd360"
          },
          "dataBitSize": 32,
          "regCount": 32,
          "inputs": {
            "rs": {
              "bitSize": 5
            },
            "rt": {
              "bitSize": 5
            }
          },
          "outputs": {
            "reg1Value": {},
            "reg2Value": {}
          },
          "inputsToOutputs": {
            "rs": "reg1Value",
            "rt": "reg2Value"
          },

          "destReg": { "bitSize": 5 },
          "destRegValue": {},
          "regWriteSignal": { "bitSize": 1 },

          "description": "Bank of registers of fixed size. Can be used as temporary storage."
        }
      },
      {
        "SignExtend": {
          "label": "SE",
          "style": {
            "x": 650,
            "y": 745,
            "width": 30,
            "height": 50,
            "colour": "#e87b7b"
          },
          "inputs": {
            "input": {
              "bitSize": 16
            }
          },
          "outputs": {
            "immediateValue": {}
          },
          "description": "Extends the output, from 16 bit to 32 bit in size."
        }
      },
      {
        "LatchRegister": {
          "label": "ID_EX",
          "style": {
            "x": 780,
            "y": 185,
            "width": 40,
            "height": 720,
            "colour": "#589074"
          },
          "inputs": {
            "controlSignals": {},
            "newAddress": {},
            "reg1Value": {},
            "reg2Value": {},
            "immediateValue": {},
            "rt": {
              "bitSize": 5
            },
            "rd": {
              "bitSize": 5
            }
          },
          "outputs": {
            "controlSignals": {},
            "newAddress": {},
            "aluInputA": {},
            "reg2Value": {},
            "immediateValue": {},
            "rt": {
              "bitSize": 5
            },
            "rd": {
              "bitSize": 5
            }
          },
          "inputsToOutputs": {
            "controlSignals": [
              "controlSignals"
            ],
            "newAddress": [
              "newAddress"
            ],
            "reg1Value": [
              "aluInputA"
            ],
            "reg2Value": [
              "reg2Value"
            ],
            "immediateValue": [
              "immediateValue"
            ],
            "rt": [
              "rt"
            ],
            "rd": [
              "rd"
            ]
          },
          "description": "Latch register between Decode and Execute phase"
        }
      },
      {
        "Fork": {
          "label": "F1",
          "style": {
            "x": 870,
            "y": 280,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {
              "bitSize": 11
            }
          },
          "outputs": {
            "controlSignals": {
              "bitSize": 10
            },
            "destRegSignal": {
              "bitSize": 11,
              "range": { "0": "10" }
            }
          }
        }
      },
      {
        "Fork": {
          "label": "F2",
          "style": {
            "x": 940,
            "y": 280,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {
              "bitSize": 10
            }
          },
          "outputs": {
            "controlSignals": {
              "bitSize": 9
            },
            "aluSrcSignal": {
              "bitSize": 10,
              "range": { "0": "9" }
            }
          }
        }
      },
      {
        "Fork": {
          "label": "F3",
          "style": {
            "x": 1050,
            "y": 280,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {
              "bitSize": 9
            }
          },
          "outputs": {
            "controlSignals": {
              "bitSize": 5
            },
            "aluOp": {
              "bitSize": 9,
              "range": { "0": "5" }
            }
          }
        }
      },
      {
        "ConstMUX": {
          "label": "EX_CU_MUX",
          "style": {
            "x": 1095,
            "y": 250,
            "width": 35,
            "height": 70,
            "colour": "#c51df8"
          },
          "inputs": {
            "input": {
              "bitSize": 5
            }
          },
          "outputs": {
            "controlSignals": {
              "bitSize": 5
            }
          },
          "selectors": {
            "bubble": {
              "bitSize": 1
            }
          },
          "constant": {
            "data": 0
          },
          "description": "MUX that can zero out signals from control unit in EX phase."
        }
      },
      {
        "Fork": {
          "label": "RVF",
          "style": {
            "x": 855,
            "y": 640,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {}
          },
          "outputs": {
            "reg2Value": {}
          },
          "description": "Forks  value from second register from Reg Bank. This value is forwarded to AluSrc MUX and to the next latch register."
        }
      },
      {
        "Fork": {
          "label": "IVF",
          "style": {
            "x": 890,
            "y": 675,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {}
          },
          "outputs": {
            "immediateValue": {}
          },
          "description": "Forks immediate value and forwards it to the AluSrc MUX and to the branch adder to compute branch address."
        }
      },
      {
        "Adder": {
          "label": "+",
          "style": {
            "x": 970,
            "y": 355,
            "width": 45,
            "height": 80,
            "colour": "#2c72f4"
          },
          "inputs": {
            "newAddress": {},
            "immediateValue": {}
          },
          "outputs": {
            "branchAddress": {}
          },
          "description": "Computes branch address by adding offset from immediate value to the value of next address."
        }
      },
      {
        "MUX": {
          "label": "ALUSrc_MUX",
          "style": {
            "x": 935,
            "y": 620,
            "width": 35,
            "height": 70,
            "colour": "#c51df8"
          },
          "inputs": {
            "reg2Value": {},
            "immediateValue": {}
          },
          "outputs": {
            "aluInputB": {}
          },
          "selectors": {
            "aluSrcSignal": {
              "bitSize": 1
            }
          },
          "description": "Determines the second input into ALU. It could be either output from registers or immediate value."
        }
      },
      {
        "ALU": {
          "label": "ALU",
          "style": {
            "x": 1000,
            "y": 480,
            "width": 110,
            "height": 215,
            "colour": "#98999a"
          },
          "inputs": {
            "aluInputA": {},
            "aluInputB": {}
          },
          "outputs": {
            "aluResult": {}
          },
          "aluOp": { "bitSize": 4 },
          "zeroResultSignal": { "bitSize": 1 },
          "operations": {
            "0": {
              "label": "ADD"
            },
            "1": {
              "label": "ADD"
            },
            "2": {
              "label": "SUB"
            },
            "3": {
              "label": "AND"
            },
            "4": {
              "label": "OR"
            },
            "5": {
              "label": "NOR"
            },
            "6": {
              "label": "XOR"
            },
            "7": {
              "label": "MUL"
            },
            "8": {
              "label": "MULU"
            },
            "9": {
              "label": "DIV"
            },
            "10": {
              "label": "DIVU"
            },
            "11": {
              "label": "BNEQ"
            },
            "13": {
              "label": "SLLV"
            },
            "14": {
              "label": "SRLV"
            },
            "15": {
              "label": "LUI"
            }
          },
          "description": "Computational Unit of the CPU. Does most of the mathematical operations."
        }
      },
      {
        "MUX": {
          "label": "DEST_REG MUX",
          "style": {
            "x": 857,
            "y": 812,
            "width": 35,
            "height": 70,
            "colour": "#c51df8"
          },
          "inputs": {
            "rt": {
              "bitSize": 5
            },
            "rd": {
              "bitSize": 5
            }
          },
          "outputs": {
            "destReg": {
              "bitSize": 5
            }
          },
          "selectors": {
            "destRegSignal": {
              "bitSize": 1
            }
          },
          "description": "Chooses destination register (either rd or rt value from instruction)."
        }
      },
      {
        "LatchRegister": {
          "label": "EX_MEM",
          "style": {
            "x": 1150,
            "y": 185,
            "width": 40,
            "height": 720,
            "colour": "#589074"
          },
          "inputs": {
            "controlSignals": {},
            "branchAddress": {},
            "zeroResultSignal": {
              "bitSize": 1
            },
            "aluResult": {},
            "reg2Value": {},
            "destReg": {
              "bitSize": 5
            }
          },
          "outputs": {
            "controlSignals": {},
            "branchAddress": {},
            "zeroResultSignal": {
              "bitSize": 1
            },
            "aluResult": {},
            "reg2Value": {},
            "destReg": {
              "bitSize": 5
            }
          },
          "inputsToOutputs": {
            "controlSignals": [
              "controlSignals"
            ],
            "branchAddress": [
              "branchAddress"
            ],
            "zeroResultSignal": [
              "zeroResultSignal"
            ],
            "aluResult": [
              "aluResult"
            ],
            "reg2Value": [
              "reg2Value"
            ],
            "destReg": [
              "destReg"
            ]
          },
          "description": "Latch register between Execute and Memory phase"
        }
      },
      {
        "Fork": {
          "label": "F4",
          "style": {
            "x": 1217,
            "y": 285,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {
              "bitSize": 5
            }
          },
          "outputs": {
            "controlSignals": {
              "bitSize": 4
            },
            "branchSignal": {
              "bitSize": 5,
              "range": { "0": "4" }
            }
          }
        }
      },
      {
        "Fork": {
          "label": "F5",
          "style": {
            "x": 1360,
            "y": 285,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {
              "bitSize": 4
            }
          },
          "outputs": {
            "controlSignals": {
              "bitSize": 3
            },
            "memReadSignal": {
              "bitSize": 4,
              "range": { "0": "3" }
            }
          }
        }
      },
      {
        "Fork": {
          "label": "F6",
          "style": {
            "x": 1485,
            "y": 285,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {
              "bitSize": 3
            }
          },
          "outputs": {
            "controlSignals": {
              "bitSize": 2
            },
            "memWriteSignal": {
              "bitSize": 3,
              "range": { "0": "2" }
            }
          }
        }
      },
      {
        "AND": {
          "label": "&",
          "style": {
            "x": 1240,
            "y": 330,
            "width": 20,
            "height": 45,
            "colour": "#000000"
          },
          "inputs": {
            "branchSignal": {
              "bitSize": 1
            },
            "zeroResultSignal": {
              "bitSize": 1
            }
          },
          "outputs": {
            "branchSignal": {
              "bitSize": 1
            }
          },
          "description": "Output of this AND gate determines, if a branch will be taken or not."
        }
      },
      {
        "Fork": {
          "label": "BF",
          "style": {
            "x": 1270,
            "y": 150,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {
              "bitSize": 1
            }
          },
          "outputs": {
            "branchSignal": {
              "bitSize": 1
            },
            "bubble": {
              "bitSize": 1
            }
          },
          "description": "Forks branch signal into bubble, to erase all control signals from previous datapath phases."
        }
      },
      {
        "Fork": {
          "label": "BF1",
          "style": {
            "x": 1112,
            "y": 150,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {
              "bitSize": 1
            }
          },
          "outputs": {
            "bubble": {
              "bitSize": 1
            }
          }
        }
      },
      {
        "Fork": {
          "label": "BF2",
          "style": {
            "x": 697,
            "y": 150,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {
              "bitSize": 1
            }
          },
          "outputs": {
            "bubble": {
              "bitSize": 1
            }
          }
        }
      },
      {
        "Fork": {
          "label": "ARF",
          "style": {
            "x": 1215,
            "y": 600,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {}
          },
          "outputs": {
            "aluResult": {}
          },
          "description": "Forks result from ALU and forwards it to the data memory and next latch register."
        }
      },
      {
        "DataMemory": {
          "label": "Data Memory",
          "style": {
            "x": 1275,
            "y": 510,
            "width": 180,
            "height": 180,
            "colour": "#ccd360"
          },
          "inputs": {
            "aluResult": {},
            "reg2Value": {}
          },
          "outputs": {
            "memData": {}
          },
          "memReadSignal":  { "bitSize": 1 },
          "memWriteSignal": { "bitSize": 1 },
          "description": "Saves data, extra CPU storage and typically much bigger in size than register bank."
        }
      },
      {
        "LatchRegister": {
          "label": "MEM_WB",
          "style": {
            "x": 1510,
            "y": 185,
            "width": 40,
            "height": 720,
            "colour": "#589074"
          },
          "inputs": {
            "controlSignals": {},
            "memData": {},
            "aluResult": {},
            "destReg": {
              "bitSize": 5
            }
          },
          "outputs": {
            "controlSignals": {},
            "memData": {},
            "aluResult": {},
            "destReg": {
              "bitSize": 5
            }
          },
          "inputsToOutputs": {
            "controlSignals": [
              "controlSignals"
            ],
            "memData": [
              "memData"
            ],
            "aluResult": [
              "aluResult"
            ],
            "destReg": [
              "destReg"
            ]
          },
          "description": "Latch register between Memory and WriteBack phase"
        }
      },
      {
        "Fork": {
          "label": "F7",
          "style": {
            "x": 1603,
            "y": 285,
            "width": 5,
            "height": 5
          },
          "inputs": {
            "input": {
              "bitSize": 2
            }
          },
          "outputs": {
            "regWriteSignal": {
              "bitSize": 1
            },
            "memToRegSignal": {
              "bitSize": 2,
              "range": {"0": "1" }
            }
          }
        }
      },
      {
        "MUX": {
          "label": "WB MUX",
          "style": {
            "x": 1590,
            "y": 595,
            "width": 35,
            "height": 70,
            "colour": "#c51df8"
          },
          "inputs": {
            "memData": {},
            "aluResult": {}
          },
          "outputs": {
            "destRegValue": {}
          },
          "selectors": {
            "memToRegSignal": {
              "bitSize": 1
            }
          },
          "description": "Chooses from memory output or immediate value. Chosen value may be written into a register in next cycle."
        }
      }
    ],
    "connectors": [
      {
        "from": "PC",
        "to": "AF",
        "selector": "address",
        "wireType": "normal",
        "nodes": [
          {
            "x": 100,
            "y": 590
          },
          {
            "x": 160,
            "y": 590
          }
        ]
      },
      {
        "from": "AF",
        "to": "Instruction Memory",
        "selector": "address",
        "wireType": "normal",
        "nodes": [
          {
            "x": 163,
            "y": 590
          },
          {
            "x": 205,
            "y": 590
          }
        ]
      },
      {
        "from": "AF",
        "to": "+4",
        "selector": "address",
        "wireType": "normal",
        "nodes": [
          {
            "x": 163,
            "y": 590
          },
          {
            "x": 163,
            "y": 390
          },
          {
            "x": 250,
            "y": 390
          }
        ]
      },
      {
        "from": "+4",
        "to": "NAF",
        "selector": "newAddress",
        "wireType": "normal",
        "nodes": [
          {
            "x": 295,
            "y": 415
          },
          {
            "x": 330,
            "y": 415
          }
        ]
      },
      {
        "from": "NAF",
        "to": "IF_ID",
        "selector": "newAddress",
        "wireType": "normal",
        "nodes": [
          {
            "x": 330,
            "y": 415
          },
          {
            "x": 390,
            "y": 415
          }
        ]
      },
      {
        "from": "NAF",
        "to": "BRANCH_MUX",
        "selector": "newAddress",
        "wireType": "normal",
        "nodes": [
          {
            "x": 330,
            "y": 415
          },
          {
            "x": 330,
            "y": 100
          },
          {
            "x": 1380,
            "y": 100
          }
        ]
      },
      {
        "from": "BRANCH_MUX",
        "to": "PC",
        "selector": "newAddress",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1390,
            "y": 121
          },
          {
            "x": 1500,
            "y": 121
          },
          {
            "x": 1500,
            "y": 30
          },
          {
            "x": 35,
            "y": 30
          },
          {
            "x": 35,
            "y": 590
          },
          {
            "x": 100,
            "y": 590
          }
        ]
      },
      {
        "from": "Instruction Memory",
        "to": "IF_ID",
        "selector": "iCode",
        "wireType": "normal",
        "nodes": [
          {
            "x": 325,
            "y": 590
          },
          {
            "x": 400,
            "y": 590
          }
        ]
      },
      {
        "from": "IF_ID",
        "to": "CU",
        "selector": "iCode",
        "wireType": "normal",
        "nodes": [
          {
            "x": 400,
            "y": 265
          },
          {
            "x": 545,
            "y": 265
          }
        ]
      },
      {
        "from": "IF_ID",
        "to": "ID_EX",
        "selector": "newAddress",
        "wireType": "normal",
        "nodes": [
          {
            "x": 400,
            "y": 415
          },
          {
            "x": 790,
            "y": 415
          }
        ]
      },
      {
        "from": "IF_ID",
        "to": "Registers",
        "selector": "rs",
        "wireType": "normal",
        "nodes": [
          {
            "x": 400,
            "y": 475
          },
          {
            "x": 580,
            "y": 475
          }
        ]
      },
      {
        "from": "IF_ID",
        "to": "RTF",
        "selector": "rt",
        "wireType": "normal",
        "nodes": [
          {
            "x": 400,
            "y": 515
          },
          {
            "x": 477,
            "y": 515
          }
        ]
      },
      {
        "from": "IF_ID",
        "to": "SE",
        "selector": "immediateValue",
        "wireType": "normal",
        "nodes": [
          {
            "x": 400,
            "y": 750
          },
          {
            "x": 650,
            "y": 750
          }
        ]
      },
      {
        "from": "IF_ID",
        "to": "ID_EX",
        "selector": "rd",
        "wireType": "normal",
        "nodes": [
          {
            "x": 400,
            "y": 865
          },
          {
            "x": 790,
            "y": 865
          }
        ]
      },
      {
        "from": "CU",
        "to": "CU_MUX",
        "selector": "controlSignals",
        "wireType": "normal",
        "nodes": [
          {
            "x": 555,
            "y": 265
          },
          {
            "x": 690,
            "y": 265
          }
        ],
        "content": [
          {
            "regDest": 1
          },
          {
            "aluSrc": 1
          },
          {
            "aluOp": 4
          },
          {
            "branch": 1
          },
          {
            "memRead": 1
          },
          {
            "memWrite": 1
          },
          {
            "regWrite": 1
          },
          {
            "memToReg": 1
          }
        ]
      },
      {
        "from": "CU_MUX",
        "to": "ID_EX",
        "selector": "controlSignals",
        "wireType": "normal",
        "nodes": [
          {
            "x": 710,
            "y": 280
          },
          {
            "x": 790,
            "y": 280
          }
        ],
        "content": [
          {
            "regDest": 1
          },
          {
            "aluSrc": 1
          },
          {
            "aluOp": 4
          },
          {
            "branch": 1
          },
          {
            "memRead": 1
          },
          {
            "memWrite": 1
          },
          {
            "regWrite": 1
          },
          {
            "memToReg": 1
          }
        ]
      },
      {
        "from": "RTF",
        "to": "Registers",
        "selector": "rt",
        "wireType": "normal",
        "nodes": [
          {
            "x": 477,
            "y": 515
          },
          {
            "x": 575,
            "y": 515
          }
        ]
      },
      {
        "from": "RTF",
        "to": "ID_EX",
        "selector": "rt",
        "wireType": "normal",
        "nodes": [
          {
            "x": 477,
            "y": 515
          },
          {
            "x": 477,
            "y": 830
          },
          {
            "x": 790,
            "y": 830
          }
        ]
      },
      {
        "from": "Registers",
        "to": "ID_EX",
        "selector": "reg1Value",
        "wireType": "normal",
        "nodes": [
          {
            "x": 735,
            "y": 480
          },
          {
            "x": 765,
            "y": 480
          },
          {
            "x": 765,
            "y": 520
          },
          {
            "x": 790,
            "y": 520
          }
        ]
      },
      {
        "from": "Registers",
        "to": "ID_EX",
        "selector": "reg2Value",
        "wireType": "normal",
        "nodes": [
          {
            "x": 735,
            "y": 620
          },
          {
            "x": 765,
            "y": 620
          },
          {
            "x": 765,
            "y": 580
          },
          {
            "x": 790,
            "y": 580
          }
        ]
      },
      {
        "from": "SE",
        "to": "ID_EX",
        "selector": "immediateValue",
        "wireType": "normal",
        "nodes": [
          {
            "x": 650,
            "y": 750
          },
          {
            "x": 790,
            "y": 750
          }
        ]
      },
      {
        "from": "ID_EX",
        "to": "F1",
        "selector": "controlSignals",
        "wireType": "normal",
        "nodes": [
          {
            "x": 820,
            "y": 280
          },
          {
            "x": 870,
            "y": 280
          }
        ],
        "content": [
          {
            "regDest": 1
          },
          {
            "aluSrc": 1
          },
          {
            "aluOp": 4
          },
          {
            "branch": 1
          },
          {
            "memRead": 1
          },
          {
            "memWrite": 1
          },
          {
            "regWrite": 1
          },
          {
            "memToReg": 1
          }
        ]
      },
      {
        "from": "ID_EX",
        "to": "+",
        "selector": "newAddress",
        "wireType": "normal",
        "nodes": [
          {
            "x": 820,
            "y": 415
          },
          {
            "x": 980,
            "y": 415
          }
        ]
      },
      {
        "from": "ID_EX",
        "to": "IVF",
        "selector": "immediateValue",
        "wireType": "normal",
        "nodes": [
          {
            "x": 820,
            "y": 750
          },
          {
            "x": 892,
            "y": 750
          },
          {
            "x": 892,
            "y": 675
          }
        ]
      },
      {
        "from": "ID_EX",
        "to": "ALU",
        "selector": "aluInputA",
        "wireType": "normal",
        "nodes": [
          {
            "x": 820,
            "y": 520
          },
          {
            "x": 1010,
            "y": 520
          }
        ]
      },
      {
        "from": "ID_EX",
        "to": "RVF",
        "selector": "reg2Value",
        "wireType": "normal",
        "nodes": [
          {
            "x": 820,
            "y": 580
          },
          {
            "x": 857,
            "y": 580
          },
          {
            "x": 857,
            "y": 642
          }
        ]
      },
      {
        "from": "ID_EX",
        "to": "DEST_REG MUX",
        "selector": "rt",
        "wireType": "normal",
        "nodes": [
          {
            "x": 820,
            "y": 830
          },
          {
            "x": 880,
            "y": 830
          }
        ]
      },
      {
        "from": "ID_EX",
        "to": "DEST_REG MUX",
        "selector": "rd",
        "wireType": "normal",
        "nodes": [
          {
            "x": 820,
            "y": 865
          },
          {
            "x": 880,
            "y": 865
          }
        ]
      },
      {
        "from": "DEST_REG MUX",
        "to": "EX_MEM",
        "selector": "destReg",
        "wireType": "normal",
        "nodes": [
          {
            "x": 880,
            "y": 855
          },
          {
            "x": 1160,
            "y": 855
          }
        ]
      },
      {
        "from": "F1",
        "to": "F2",
        "selector": "controlSignals",
        "wireType": "normal",
        "nodes": [
          {
            "x": 873,
            "y": 280
          },
          {
            "x": 940,
            "y": 280
          }
        ],
        "content": [
          {
            "aluSrc": 1
          },
          {
            "aluOp": 4
          },
          {
            "branch": 1
          },
          {
            "memRead": 1
          },
          {
            "memWrite": 1
          },
          {
            "regWrite": 1
          },
          {
            "memToReg": 1
          }
        ]
      },
      {
        "from": "F1",
        "to": "DEST_REG MUX",
        "selector": "destRegSignal",
        "wireType": "thin",
        "nodes": [
          {
            "x": 873,
            "y": 280
          },
          {
            "x": 873,
            "y": 815
          }
        ]
      },
      {
        "from": "F2",
        "to": "F3",
        "selector": "controlSignals",
        "wireType": "normal",
        "nodes": [
          {
            "x": 943,
            "y": 280
          },
          {
            "x": 1055,
            "y": 280
          }
        ],
        "content": [
          {
            "aluOp": 4
          },
          {
            "branch": 1
          },
          {
            "memRead": 1
          },
          {
            "memWrite": 1
          },
          {
            "regWrite": 1
          },
          {
            "memToReg": 1
          }
        ]
      },
      {
        "from": "F2",
        "to": "ALUSrc_MUX",
        "selector": "aluSrcSignal",
        "wireType": "thin",
        "nodes": [
          {
            "x": 943,
            "y": 280
          },
          {
            "x": 943,
            "y": 635
          }
        ]
      },
      {
        "from": "F3",
        "to": "EX_CU_MUX",
        "selector": "controlSignals",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1053,
            "y": 280
          },
          {
            "x": 1105,
            "y": 280
          }
        ],
        "content": [
          {
            "branch": 1
          },
          {
            "memRead": 1
          },
          {
            "memWrite": 1
          },
          {
            "regWrite": 1
          },
          {
            "memToReg": 1
          }
        ]
      },
      {
        "from": "F3",
        "to": "ALU",
        "selector": "aluOp",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1053,
            "y": 280
          },
          {
            "x": 1053,
            "y": 495
          }
        ]
      },
      {
        "from": "EX_CU_MUX",
        "to": "EX_MEM",
        "selector": "controlSignals",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1105,
            "y": 285
          },
          {
            "x": 1160,
            "y": 285
          }
        ],
        "content": [
          {
            "branch": 1
          },
          {
            "memRead": 1
          },
          {
            "memWrite": 1
          },
          {
            "regWrite": 1
          },
          {
            "memToReg": 1
          }
        ]
      },
      {
        "from": "RVF",
        "to": "ALUSrc_MUX",
        "selector": "reg2Value",
        "wireType": "normal",
        "nodes": [
          {
            "x": 857,
            "y": 642
          },
          {
            "x": 950,
            "y": 642
          }
        ]
      },
      {
        "from": "RVF",
        "to": "EX_MEM",
        "selector": "reg2Value",
        "wireType": "normal",
        "nodes": [
          {
            "x": 857,
            "y": 642
          },
          {
            "x": 857,
            "y": 777
          },
          {
            "x": 1165,
            "y": 777
          }
        ]
      },
      {
        "from": "IVF",
        "to": "+",
        "selector": "immediateValue",
        "wireType": "normal",
        "nodes": [
          {
            "x": 892,
            "y": 675
          },
          {
            "x": 892,
            "y": 375
          },
          {
            "x": 980,
            "y": 375
          }
        ]
      },
      {
        "from": "IVF",
        "to": "ALUSrc_MUX",
        "selector": "immediateValue",
        "wireType": "normal",
        "nodes": [
          {
            "x": 892,
            "y": 675
          },
          {
            "x": 945,
            "y": 675
          }
        ]
      },
      {
        "from": "+",
        "to": "EX_MEM",
        "selector": "branchAddress",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1015,
            "y": 400
          },
          {
            "x": 1160,
            "y": 400
          }
        ]
      },
      {
        "from": "ALUSrc_MUX",
        "to": "ALU",
        "selector": "aluInputB",
        "wireType": "normal",
        "nodes": [
          {
            "x": 970,
            "y": 665
          },
          {
            "x": 1010,
            "y": 665
          }
        ]
      },
      {
        "from": "ALU",
        "to": "EX_MEM",
        "selector": "aluResult",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1110,
            "y": 600
          },
          {
            "x": 1165,
            "y": 600
          }
        ]
      },
      {
        "from": "ALU",
        "to": "EX_MEM",
        "selector": "zeroResultSignal",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1110,
            "y": 565
          },
          {
            "x": 1165,
            "y": 565
          }
        ]
      },
      {
        "from": "EX_MEM",
        "to": "F4",
        "selector": "controlSignals",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1190,
            "y": 285
          },
          {
            "x": 1220,
            "y": 285
          }
        ],
        "content": [
          {
            "branch": 1
          },
          {
            "memRead": 1
          },
          {
            "memWrite": 1
          },
          {
            "regWrite": 1
          },
          {
            "memToReg": 1
          }
        ]
      },
      {
        "from": "EX_MEM",
        "to": "&",
        "selector": "zeroResultSignal",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1190,
            "y": 565
          },
          {
            "x": 1220,
            "y": 565
          },
          {
            "x": 1220,
            "y": 363
          },
          {
            "x": 1245,
            "y": 363
          }
        ]
      },
      {
        "from": "EX_MEM",
        "to": "BRANCH_MUX",
        "selector": "branchAddress",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1190,
            "y": 400
          },
          {
            "x": 1333,
            "y": 400
          },
          {
            "x": 1333,
            "y": 130
          },
          {
            "x": 1385,
            "y": 130
          }
        ]
      },
      {
        "from": "EX_MEM",
        "to": "ARF",
        "selector": "aluResult",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1190,
            "y": 600
          },
          {
            "x": 1217,
            "y": 600
          }
        ]
      },
      {
        "from": "EX_MEM",
        "to": "Data Memory",
        "selector": "reg2Value",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1190,
            "y": 777
          },
          {
            "x": 1245,
            "y": 777
          },
          {
            "x": 1245,
            "y": 670
          },
          {
            "x": 1280,
            "y": 670
          }
        ]
      },
      {
        "from": "EX_MEM",
        "to": "MEM_WB",
        "selector": "destReg",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1190,
            "y": 855
          },
          {
            "x": 1520,
            "y": 855
          }
        ]
      },
      {
        "from": "F4",
        "to": "F5",
        "selector": "controlSignals",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1225,
            "y": 285
          },
          {
            "x": 1365,
            "y": 285
          }
        ],
        "content": [
          {
            "memRead": 1
          },
          {
            "memWrite": 1
          },
          {
            "regWrite": 1
          },
          {
            "memToReg": 1
          }
        ]
      },
      {
        "from": "F4",
        "to": "&",
        "selector": "branchSignal",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1220,
            "y": 285
          },
          {
            "x": 1220,
            "y": 340
          },
          {
            "x": 1245,
            "y": 340
          }
        ]
      },
      {
        "from": "F5",
        "to": "F6",
        "selector": "controlSignals",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1365,
            "y": 285
          },
          {
            "x": 1485,
            "y": 285
          }
        ],
        "content": [
          {
            "memWrite": 1
          },
          {
            "regWrite": 1
          },
          {
            "memToReg": 1
          }
        ]
      },
      {
        "from": "F5",
        "to": "Data Memory",
        "selector": "memReadSignal",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1365,
            "y": 285
          },
          {
            "x": 1365,
            "y": 520
          }
        ]
      },
      {
        "from": "F6",
        "to": "MEM_WB",
        "selector": "controlSignals",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1485,
            "y": 285
          },
          {
            "x": 1520,
            "y": 285
          }
        ],
        "content": [
          {
            "regWrite": 1
          },
          {
            "memToReg": 1
          }
        ]
      },
      {
        "from": "F6",
        "to": "Data Memory",
        "selector": "memWriteSignal",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1485,
            "y": 285
          },
          {
            "x": 1485,
            "y": 710
          },
          {
            "x": 1365,
            "y": 710
          },
          {
            "x": 1365,
            "y": 690
          }
        ]
      },
      {
        "from": "&",
        "to": "BF",
        "selector": "branchSignal",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1250,
            "y": 353
          },
          {
            "x": 1275,
            "y": 353
          },
          {
            "x": 1275,
            "y": 150
          }
        ]
      },
      {
        "from": "BF",
        "to": "BRANCH_MUX",
        "selector": "branchSignal",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1275,
            "y": 150
          },
          {
            "x": 1275,
            "y": 63
          },
          {
            "x": 1390,
            "y": 63
          },
          {
            "x": 1390,
            "y": 85
          }
        ]
      },
      {
        "from": "BF",
        "to": "BF1",
        "selector": "bubble",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1275,
            "y": 150
          },
          {
            "x": 1112,
            "y": 150
          }
        ]
      },
      {
        "from": "BF1",
        "to": "BF2",
        "selector": "bubble",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1112,
            "y": 150
          },
          {
            "x": 700,
            "y": 150
          }
        ]
      },
      {
        "from": "BF1",
        "to": "EX_CU_MUX",
        "selector": "bubble",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1112,
            "y": 150
          },
          {
            "x": 1112,
            "y": 250
          }
        ]
      },
      {
        "from": "BF2",
        "to": "CU_MUX",
        "selector": "bubble",
        "wireType": "thin",
        "nodes": [
          {
            "x": 700,
            "y": 150
          },
          {
            "x": 700,
            "y": 250
          }
        ]
      },
      {
        "from": "BF2",
        "to": "IF_ID",
        "selector": "bubble",
        "wireType": "thin",
        "nodes": [
          {
            "x": 700,
            "y": 150
          },
          {
            "x": 410,
            "y": 150
          },
          {
            "x": 410,
            "y": 195
          }
        ]
      },
      {
        "from": "ARF",
        "to": "Data Memory",
        "selector": "aluResult",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1217,
            "y": 600
          },
          {
            "x": 1290,
            "y": 600
          }
        ]
      },
      {
        "from": "ARF",
        "to": "MEM_WB",
        "selector": "aluResult",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1217,
            "y": 600
          },
          {
            "x": 1217,
            "y": 740
          },
          {
            "x": 1520,
            "y": 740
          }
        ]
      },
      {
        "from": "Data Memory",
        "to": "MEM_WB",
        "selector": "memData",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1460,
            "y": 615
          },
          {
            "x": 1520,
            "y": 615
          }
        ]
      },
      {
        "from": "MEM_WB",
        "to": "F7",
        "selector": "controlSignals",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1555,
            "y": 285
          },
          {
            "x": 1607,
            "y": 285
          }
        ],
        "content": [
          {
            "regWrite": 1
          },
          {
            "memToReg": 1
          }
        ]
      },
      {
        "from": "MEM_WB",
        "to": "WB MUX",
        "selector": "memData",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1555,
            "y": 615
          },
          {
            "x": 1602,
            "y": 615
          }
        ]
      },
      {
        "from": "MEM_WB",
        "to": "WB MUX",
        "selector": "aluResult",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1555,
            "y": 740
          },
          {
            "x": 1570,
            "y": 740
          },
          {
            "x": 1570,
            "y": 645
          },
          {
            "x": 1607,
            "y": 645
          }
        ]
      },
      {
        "from": "MEM_WB",
        "to": "Registers",
        "selector": "destReg",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1555,
            "y": 855
          },
          {
            "x": 1610,
            "y": 855
          },
          {
            "x": 1610,
            "y": 925
          },
          {
            "x": 505,
            "y": 925
          },
          {
            "x": 505,
            "y": 570
          },
          {
            "x": 575,
            "y": 570
          }
        ]
      },
      {
        "from": "F7",
        "to": "WB MUX",
        "selector": "memToRegSignal",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1607,
            "y": 285
          },
          {
            "x": 1607,
            "y": 590
          }
        ]
      },
      {
        "from": "F7",
        "to": "Registers",
        "selector": "regWriteSignal",
        "wireType": "thin",
        "nodes": [
          {
            "x": 1607,
            "y": 285
          },
          {
            "x": 1607,
            "y": 55
          },
          {
            "x": 655,
            "y": 55
          },
          {
            "x": 655,
            "y": 455
          }
        ]
      },
      {
        "from": "WB MUX",
        "to": "Registers",
        "selector": "destRegValue",
        "wireType": "normal",
        "nodes": [
          {
            "x": 1625,
            "y": 625
          },
          {
            "x": 1640,
            "y": 625
          },
          {
            "x": 1640,
            "y": 950
          },
          {
            "x": 540,
            "y": 950
          },
          {
            "x": 540,
            "y": 625
          },
          {
            "x": 575,
            "y": 625
          }
        ]
      }
    ]
  }
}